/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./src/scripts/arena.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction Arena(height = 10, border = 'infinity') {\n    this.height = height;\n    this.width = height;\n    this.border = border;\n    this.cells = new Array();\n\n    for (let row = 0; row < height; row++) {\n        const arenaRow = [];\n\n        for (let column = 0; column < height; column++) {\n            arenaRow.push(['']);\n        }\n\n        this.cells.push(arenaRow);\n    }\n}\n\nArena.prototype.getArena = function () {\n    return this.cells;\n};\n\n/**\n *\n * @param {*} x coordinate\n * @param {*} y coordinate\n * @param {*} value\n * @returns\n */\nArena.prototype.updateCell = function (x, y, value) {\n    if (x >= this.height || y >= this.height) {\n        console.error(new Error('x or y value does not exist in the arena'));\n        return;\n    }\n\n    this.cells[x][y] = value;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arena);\n\n\n//# sourceURL=webpack://todo-list/./src/scripts/arena.js?")},"./src/scripts/barrel.js":()=>{eval("\n\n//# sourceURL=webpack://todo-list/./src/scripts/barrel.js?")},"./src/scripts/displayControl.js":()=>{eval("\n\n//# sourceURL=webpack://todo-list/./src/scripts/displayControl.js?")},"./src/scripts/main.js":()=>{eval("\n\n//# sourceURL=webpack://todo-list/./src/scripts/main.js?")},"./src/scripts/player.js":()=>{eval("\n\n//# sourceURL=webpack://todo-list/./src/scripts/player.js?")},"./src/scripts/snake.js":()=>{eval("/**\n * @param {*} x starting x coordinate\n * @param {*} y starting y coordinate\n * @param {*} speed\n */\nfunction Snake(x = 0, y = 0) {\n    this.direction = 'right';\n    this.length = 1;\n    this.status = 'alive';\n    this.body = [\n        {\n            type: 'head',\n            cell: [x, y],\n        },\n    ];\n}\n\nSnake.prototype.die = function () {\n    this.direction = 'right';\n    this.length = 1;\n    this.body = this.body[0];\n    this.status = 'dead';\n};\n\nSnake.prototype.moveForward = function () {\n    let headCoordinates = this.headCell();\n    const tail = this.body.pop();\n\n    switch (this.direction) {\n        case 'left':\n            headCoordinates[0] -= 1;\n            break;\n        case 'right':\n            headCoordinates[0] += 1;\n            break;\n        case 'up':\n            headCoordinates[1] += 1;\n            break;\n        case 'down':\n            headCoordinates[1] -= 1;\n            break;\n        default:\n            console.error(new Error('Invalid direction'));\n            this.body.push(tail);\n            return;\n    }\n\n    tail.cell = headCoordinates;\n    tail.type = 'head';\n    this.body.unshift(tail);\n\n    if (this.length === 1) {\n        return;\n    }\n\n    if (this.length <= 2) {\n        this.body[this.length - 1].type = 'tail';\n        return;\n    }\n\n    this.body[1].type = 'body';\n};\n\nSnake.prototype.moveHead = function (x, y) {\n    this.body[0].cell = [x, y];\n};\n\nSnake.prototype.grow = function () {\n    if (this.length > 1) {\n        this.body[this.length - 1].type = 'body';\n    }\n\n    this.body.push({\n        type: 'tail',\n        cell: this.tailCell(),\n    });\n\n    this.length += 1;\n};\n\nSnake.prototype.headCell = function () {\n    const coords = this.body[0].cell;\n    return [coords[0], coords[1]];\n};\n\nSnake.prototype.tailCell = function () {\n    return this.body[this.length - 1].cell;\n};\n\nSnake.prototype.display = function () {\n    this.body.forEach((part) => {\n        console.log(`${part.type}: ${part.cell}`);\n    });\n};\n\nSnake.prototype.changeDirection = function (direction) {\n    const currentDirection = this.direction;\n\n    if (currentDirection === direction) {\n        return;\n    }\n\n    if (currentDirection === 'left' && direction === 'right') {\n        return;\n    }\n\n    if (currentDirection === 'right' && direction === 'left') {\n        return;\n    }\n\n    if (currentDirection === 'up' && direction === 'down') {\n        return;\n    }\n\n    if (currentDirection === 'down' && direction === 'up') {\n        return;\n    }\n\n    this.direction = direction;\n};\n\n\n//# sourceURL=webpack://todo-list/./src/scripts/snake.js?")}},__webpack_require__={d:(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}};__webpack_modules__["./src/scripts/arena.js"](0,{},__webpack_require__),__webpack_modules__["./src/scripts/barrel.js"](0,{},__webpack_require__),__webpack_modules__["./src/scripts/displayControl.js"](0,{},__webpack_require__),__webpack_modules__["./src/scripts/main.js"](0,{},__webpack_require__),__webpack_modules__["./src/scripts/player.js"](0,{},__webpack_require__);var __webpack_exports__={};__webpack_modules__["./src/scripts/snake.js"](0,__webpack_exports__,__webpack_require__)})();